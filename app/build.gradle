plugins {
    id 'com.android.application'
    id 'org.jetbrains.kotlin.android'

    // Necessary for secret keys:
    id 'com.google.android.libraries.mapsplatform.secrets-gradle-plugin'

    // Necessary for Hilt:
    id 'kotlin-kapt'
    id 'dagger.hilt.android.plugin'
}

secrets {
    propertiesFileName 'secure/apikeys.properties'
}

android {
    compileSdk 32

    defaultConfig {
        applicationId "com.noonlight.apps"
        minSdk 23
        targetSdk 32
        versionCode 1
        versionName "1.0"

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        // The following argument makes the Android Test Orchestrator run its
        // "pm clear" command after each test invocation. This command ensures
        // that the app's state is completely cleared between tests.
        testInstrumentationRunnerArguments clearPackageData: 'true'

        vectorDrawables {
            useSupportLibrary true
        }

        buildConfigField("String", "NOONLIGHT_SANDBOX_BASE_URL", '"https://api-sandbox.noonlight.com"')
        buildConfigField("String", "NOONLIGHT_PROD_BASE_URL", '"https://api.noonlight.com"')
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    kotlinOptions {
        jvmTarget = '1.8'
    }
    testOptions {
        // Required to reset permissions after each test.
        execution 'ANDROIDX_TEST_ORCHESTRATOR'

        // Required for MockK on UI tests.
        packagingOptions {
            jniLibs {
                useLegacyPackaging true
            }
        }
    }
    buildFeatures {
        compose true
    }
    composeOptions {
        kotlinCompilerExtensionVersion compose_version
    }
    packagingOptions {
        resources {
            excludes += '/META-INF/{AL2.0,LGPL2.1}'
        }
    }
}

dependencies {

    // Timber logging library.
    implementation 'com.jakewharton.timber:timber:5.0.1'

    // Location services
    implementation 'com.google.android.gms:play-services-location:19.0.1'
    // Maps
    implementation 'com.google.android.gms:play-services-maps:18.0.2'

    // Retrofit + OkHttp
    implementation 'com.squareup.retrofit2:retrofit:2.9.0'
    // MoshiConverterFactory
    implementation "com.squareup.retrofit2:converter-moshi:2.9.0"
    implementation("com.squareup.moshi:moshi-kotlin:1.13.0")
    implementation 'com.squareup.moshi:moshi-adapters:1.13.0'

    // Dependency Injection:
    implementation "com.google.dagger:hilt-android:$hiltVersion"
    implementation 'androidx.test:rules:1.4.0'
    kapt "com.google.dagger:hilt-compiler:$hiltVersion"

    implementation 'androidx.core:core-ktx:1.7.0'
    implementation "androidx.compose.ui:ui:$compose_version"
    implementation "androidx.compose.material:material:$compose_version"
    implementation "androidx.compose.ui:ui-tooling-preview:$compose_version"
    implementation "androidx.compose.runtime:runtime-livedata:$compose_version"
    implementation 'androidx.lifecycle:lifecycle-runtime-ktx:2.4.1'
    implementation 'androidx.activity:activity-compose:1.4.0'
    testImplementation 'junit:junit:4.13.2'
    androidTestImplementation 'androidx.test.ext:junit:1.1.3'
    testImplementation "androidx.arch.core:core-testing:2.1.0"
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.4.0'
    androidTestImplementation "androidx.compose.ui:ui-test-junit4:$compose_version"
    debugImplementation "androidx.compose.ui:ui-tooling:$compose_version"
    debugImplementation("androidx.compose.ui:ui-test-manifest:$compose_version")
    androidTestImplementation 'androidx.test:runner:1.4.0'
    androidTestUtil 'androidx.test:orchestrator:1.4.1'

    // Mocking
    def mockkVersion = "1.12.2"
    testImplementation "io.mockk:mockk:$mockkVersion"
    testImplementation "io.mockk:mockk-agent-jvm:$mockkVersion"
    androidTestImplementation "io.mockk:mockk-android:$mockkVersion"
}